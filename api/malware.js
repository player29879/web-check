const axios = require('axios');
const xml2js = require('xml2js');
const middleware = require('./_common/middleware');

const getUrlHausResult = async (url) => {
  let domain = new URL(url).hostname;
  return await axios({
    method: 'post',
    url: 'https://urlhaus-api.abuse.ch/v1/host/',
    headers: {
      'Content-Type': 'application/x-www-form-urlencoded'
    },
    data: `host=${domain}`
  })
  .then((x) => x.data)
  .catch((e) => ({ error: `Request to URLHaus failed, ${e.message}`}));
};


const getPhishTankResult = async (url) => {
  try {
    const encodedUrl = Buffer.from(url).toString('base64');
    const endpoint = `https://checkurl.phishtank.com/checkurl/?url=${encodedUrl}`;
    const headers = {
      'User-Agent': 'phishtank/web-check',
    };
    const response = await axios.post(endpoint, null, { headers, timeout: 3000 });
    const parsed = await xml2js.parseStringPromise(response.data, { explicitArray: false });
    return parsed.response.results;
  } catch (error) {
    return { error: `Request to PhishTank failed: ${error.message}` };
  }
}

const getCloudmersiveResult = async (url) => {
  try {
    const endpoint = 'https://api.cloudmersive.com/virus/scan/website';
    const headers = {
      'Content-Type': 'application/x-www-form-urlencoded',
      'Apikey': process.env.CLOUDMERSIVE_API_KEY,
    };
    const data = `Url=${encodeURIComponent(url)}`;
    const response = await axios.post(endpoint, data, { headers });
    return response.data;
  } catch (error) {
    return { error: `Request to Cloudmersive failed: ${error.message}` };
  }
};

const handler = async (url) => {
  try {
    const urlHaus = await getUrlHausResult(url);
    const phishTank = await getPhishTankResult(url);
    const cloudmersive = await getCloudmersiveResult(url);
    return JSON.stringify({ urlHaus, phishTank, cloudmersive });
  } catch (error) {
    throw new Error(error.message);
  }
};

exports.handler = middleware(handler);
